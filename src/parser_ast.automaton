State 0:
## Known stack suffix:
##
## LR(1) items:
input' -> . input [ # ]
## Transitions:
-- On ID shift to state 1
-- On symbols shift to state 8
-- On input shift to state 25
-- On declarations shift to state 26
-- On automate shift to state 50
## Reductions:

State 1:
## Known stack suffix:
## ID
## LR(1) items:
symbols -> ID . ID COLON separated_nonempty_list(COMMA,ID) [ ID ]
## Transitions:
-- On ID shift to state 2
## Reductions:

State 2:
## Known stack suffix:
## ID ID
## LR(1) items:
symbols -> ID ID . COLON separated_nonempty_list(COMMA,ID) [ ID ]
## Transitions:
-- On COLON shift to state 3
## Reductions:

State 3:
## Known stack suffix:
## ID ID COLON
## LR(1) items:
symbols -> ID ID COLON . separated_nonempty_list(COMMA,ID) [ ID ]
## Transitions:
-- On ID shift to state 4
-- On separated_nonempty_list(COMMA,ID) shift to state 7
## Reductions:

State 4:
## Known stack suffix:
## ID
## LR(1) items:
separated_nonempty_list(COMMA,ID) -> ID . [ ID ]
separated_nonempty_list(COMMA,ID) -> ID . COMMA separated_nonempty_list(COMMA,ID) [ ID ]
## Transitions:
-- On COMMA shift to state 5
## Reductions:
-- On ID
--   reduce production separated_nonempty_list(COMMA,ID) -> ID

State 5:
## Known stack suffix:
## ID COMMA
## LR(1) items:
separated_nonempty_list(COMMA,ID) -> ID COMMA . separated_nonempty_list(COMMA,ID) [ ID ]
## Transitions:
-- On ID shift to state 4
-- On separated_nonempty_list(COMMA,ID) shift to state 6
## Reductions:

State 6:
## Known stack suffix:
## ID COMMA separated_nonempty_list(COMMA,ID)
## LR(1) items:
separated_nonempty_list(COMMA,ID) -> ID COMMA separated_nonempty_list(COMMA,ID) . [ ID ]
## Transitions:
## Reductions:
-- On ID
--   reduce production separated_nonempty_list(COMMA,ID) -> ID COMMA separated_nonempty_list(COMMA,ID)

State 7:
## Known stack suffix:
## ID ID COLON separated_nonempty_list(COMMA,ID)
## LR(1) items:
symbols -> ID ID COLON separated_nonempty_list(COMMA,ID) . [ ID ]
## Transitions:
## Reductions:
-- On ID
--   reduce production symbols -> ID ID COLON separated_nonempty_list(COMMA,ID)

State 8:
## Known stack suffix:
## symbols
## LR(1) items:
declarations -> symbols . symbols states initialstate initialstack [ ID ]
## Transitions:
-- On ID shift to state 1
-- On symbols shift to state 9
## Reductions:

State 9:
## Known stack suffix:
## symbols symbols
## LR(1) items:
declarations -> symbols symbols . states initialstate initialstack [ ID ]
## Transitions:
-- On ID shift to state 10
-- On states shift to state 13
## Reductions:

State 10:
## Known stack suffix:
## ID
## LR(1) items:
states -> ID . COLON separated_nonempty_list(COMMA,ID) [ ID ]
## Transitions:
-- On COLON shift to state 11
## Reductions:

State 11:
## Known stack suffix:
## ID COLON
## LR(1) items:
states -> ID COLON . separated_nonempty_list(COMMA,ID) [ ID ]
## Transitions:
-- On ID shift to state 4
-- On separated_nonempty_list(COMMA,ID) shift to state 12
## Reductions:

State 12:
## Known stack suffix:
## ID COLON separated_nonempty_list(COMMA,ID)
## LR(1) items:
states -> ID COLON separated_nonempty_list(COMMA,ID) . [ ID ]
## Transitions:
## Reductions:
-- On ID
--   reduce production states -> ID COLON separated_nonempty_list(COMMA,ID)

State 13:
## Known stack suffix:
## symbols symbols states
## LR(1) items:
declarations -> symbols symbols states . initialstate initialstack [ ID ]
## Transitions:
-- On ID shift to state 14
-- On initialstate shift to state 18
## Reductions:

State 14:
## Known stack suffix:
## ID
## LR(1) items:
initialstate -> ID . ID COLON ID [ ID ]
## Transitions:
-- On ID shift to state 15
## Reductions:

State 15:
## Known stack suffix:
## ID ID
## LR(1) items:
initialstate -> ID ID . COLON ID [ ID ]
## Transitions:
-- On COLON shift to state 16
## Reductions:

State 16:
## Known stack suffix:
## ID ID COLON
## LR(1) items:
initialstate -> ID ID COLON . ID [ ID ]
## Transitions:
-- On ID shift to state 17
## Reductions:

State 17:
## Known stack suffix:
## ID ID COLON ID
## LR(1) items:
initialstate -> ID ID COLON ID . [ ID ]
## Transitions:
## Reductions:
-- On ID
--   reduce production initialstate -> ID ID COLON ID

State 18:
## Known stack suffix:
## symbols symbols states initialstate
## LR(1) items:
declarations -> symbols symbols states initialstate . initialstack [ ID ]
## Transitions:
-- On ID shift to state 19
-- On initialstack shift to state 24
## Reductions:

State 19:
## Known stack suffix:
## ID
## LR(1) items:
initialstack -> ID . ID ID COLON ID [ ID ]
## Transitions:
-- On ID shift to state 20
## Reductions:

State 20:
## Known stack suffix:
## ID ID
## LR(1) items:
initialstack -> ID ID . ID COLON ID [ ID ]
## Transitions:
-- On ID shift to state 21
## Reductions:

State 21:
## Known stack suffix:
## ID ID ID
## LR(1) items:
initialstack -> ID ID ID . COLON ID [ ID ]
## Transitions:
-- On COLON shift to state 22
## Reductions:

State 22:
## Known stack suffix:
## ID ID ID COLON
## LR(1) items:
initialstack -> ID ID ID COLON . ID [ ID ]
## Transitions:
-- On ID shift to state 23
## Reductions:

State 23:
## Known stack suffix:
## ID ID ID COLON ID
## LR(1) items:
initialstack -> ID ID ID COLON ID . [ ID ]
## Transitions:
## Reductions:
-- On ID
--   reduce production initialstack -> ID ID ID COLON ID

State 24:
## Known stack suffix:
## symbols symbols states initialstate initialstack
## LR(1) items:
declarations -> symbols symbols states initialstate initialstack . [ ID ]
## Transitions:
## Reductions:
-- On ID
--   reduce production declarations -> symbols symbols states initialstate initialstack

State 25:
## Known stack suffix:
## input
## LR(1) items:
input' -> input . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept input

State 26:
## Known stack suffix:
## declarations
## LR(1) items:
automate -> declarations . transitions [ EOF ]
## Transitions:
-- On ID shift to state 27
-- On transitions shift to state 49
## Reductions:

State 27:
## Known stack suffix:
## ID
## LR(1) items:
transitions -> ID . COLON list(transition) [ EOF ]
## Transitions:
-- On COLON shift to state 28
## Reductions:

State 28:
## Known stack suffix:
## ID COLON
## LR(1) items:
transitions -> ID COLON . list(transition) [ EOF ]
## Transitions:
-- On LPAREN shift to state 29
-- On transition shift to state 46
-- On list(transition) shift to state 48
## Reductions:
-- On EOF
--   reduce production list(transition) ->

State 29:
## Known stack suffix:
## LPAREN
## LR(1) items:
transition -> LPAREN . ID COMMA list(ID) COMMA ID COMMA ID COMMA loption(separated_nonempty_list(SEMICOLON,ID)) RPAREN [ LPAREN EOF ]
## Transitions:
-- On ID shift to state 30
## Reductions:

State 30:
## Known stack suffix:
## LPAREN ID
## LR(1) items:
transition -> LPAREN ID . COMMA list(ID) COMMA ID COMMA ID COMMA loption(separated_nonempty_list(SEMICOLON,ID)) RPAREN [ LPAREN EOF ]
## Transitions:
-- On COMMA shift to state 31
## Reductions:

State 31:
## Known stack suffix:
## LPAREN ID COMMA
## LR(1) items:
transition -> LPAREN ID COMMA . list(ID) COMMA ID COMMA ID COMMA loption(separated_nonempty_list(SEMICOLON,ID)) RPAREN [ LPAREN EOF ]
## Transitions:
-- On ID shift to state 32
-- On list(ID) shift to state 34
## Reductions:
-- On COMMA
--   reduce production list(ID) ->

State 32:
## Known stack suffix:
## ID
## LR(1) items:
list(ID) -> ID . list(ID) [ COMMA ]
## Transitions:
-- On ID shift to state 32
-- On list(ID) shift to state 33
## Reductions:
-- On COMMA
--   reduce production list(ID) ->

State 33:
## Known stack suffix:
## ID list(ID)
## LR(1) items:
list(ID) -> ID list(ID) . [ COMMA ]
## Transitions:
## Reductions:
-- On COMMA
--   reduce production list(ID) -> ID list(ID)

State 34:
## Known stack suffix:
## LPAREN ID COMMA list(ID)
## LR(1) items:
transition -> LPAREN ID COMMA list(ID) . COMMA ID COMMA ID COMMA loption(separated_nonempty_list(SEMICOLON,ID)) RPAREN [ LPAREN EOF ]
## Transitions:
-- On COMMA shift to state 35
## Reductions:

State 35:
## Known stack suffix:
## LPAREN ID COMMA list(ID) COMMA
## LR(1) items:
transition -> LPAREN ID COMMA list(ID) COMMA . ID COMMA ID COMMA loption(separated_nonempty_list(SEMICOLON,ID)) RPAREN [ LPAREN EOF ]
## Transitions:
-- On ID shift to state 36
## Reductions:

State 36:
## Known stack suffix:
## LPAREN ID COMMA list(ID) COMMA ID
## LR(1) items:
transition -> LPAREN ID COMMA list(ID) COMMA ID . COMMA ID COMMA loption(separated_nonempty_list(SEMICOLON,ID)) RPAREN [ LPAREN EOF ]
## Transitions:
-- On COMMA shift to state 37
## Reductions:

State 37:
## Known stack suffix:
## LPAREN ID COMMA list(ID) COMMA ID COMMA
## LR(1) items:
transition -> LPAREN ID COMMA list(ID) COMMA ID COMMA . ID COMMA loption(separated_nonempty_list(SEMICOLON,ID)) RPAREN [ LPAREN EOF ]
## Transitions:
-- On ID shift to state 38
## Reductions:

State 38:
## Known stack suffix:
## LPAREN ID COMMA list(ID) COMMA ID COMMA ID
## LR(1) items:
transition -> LPAREN ID COMMA list(ID) COMMA ID COMMA ID . COMMA loption(separated_nonempty_list(SEMICOLON,ID)) RPAREN [ LPAREN EOF ]
## Transitions:
-- On COMMA shift to state 39
## Reductions:

State 39:
## Known stack suffix:
## LPAREN ID COMMA list(ID) COMMA ID COMMA ID COMMA
## LR(1) items:
transition -> LPAREN ID COMMA list(ID) COMMA ID COMMA ID COMMA . loption(separated_nonempty_list(SEMICOLON,ID)) RPAREN [ LPAREN EOF ]
## Transitions:
-- On ID shift to state 40
-- On separated_nonempty_list(SEMICOLON,ID) shift to state 43
-- On loption(separated_nonempty_list(SEMICOLON,ID)) shift to state 44
## Reductions:
-- On RPAREN
--   reduce production loption(separated_nonempty_list(SEMICOLON,ID)) ->

State 40:
## Known stack suffix:
## ID
## LR(1) items:
separated_nonempty_list(SEMICOLON,ID) -> ID . [ RPAREN ]
separated_nonempty_list(SEMICOLON,ID) -> ID . SEMICOLON separated_nonempty_list(SEMICOLON,ID) [ RPAREN ]
## Transitions:
-- On SEMICOLON shift to state 41
## Reductions:
-- On RPAREN
--   reduce production separated_nonempty_list(SEMICOLON,ID) -> ID

State 41:
## Known stack suffix:
## ID SEMICOLON
## LR(1) items:
separated_nonempty_list(SEMICOLON,ID) -> ID SEMICOLON . separated_nonempty_list(SEMICOLON,ID) [ RPAREN ]
## Transitions:
-- On ID shift to state 40
-- On separated_nonempty_list(SEMICOLON,ID) shift to state 42
## Reductions:

State 42:
## Known stack suffix:
## ID SEMICOLON separated_nonempty_list(SEMICOLON,ID)
## LR(1) items:
separated_nonempty_list(SEMICOLON,ID) -> ID SEMICOLON separated_nonempty_list(SEMICOLON,ID) . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production separated_nonempty_list(SEMICOLON,ID) -> ID SEMICOLON separated_nonempty_list(SEMICOLON,ID)

State 43:
## Known stack suffix:
## separated_nonempty_list(SEMICOLON,ID)
## LR(1) items:
loption(separated_nonempty_list(SEMICOLON,ID)) -> separated_nonempty_list(SEMICOLON,ID) . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production loption(separated_nonempty_list(SEMICOLON,ID)) -> separated_nonempty_list(SEMICOLON,ID)

State 44:
## Known stack suffix:
## LPAREN ID COMMA list(ID) COMMA ID COMMA ID COMMA loption(separated_nonempty_list(SEMICOLON,ID))
## LR(1) items:
transition -> LPAREN ID COMMA list(ID) COMMA ID COMMA ID COMMA loption(separated_nonempty_list(SEMICOLON,ID)) . RPAREN [ LPAREN EOF ]
## Transitions:
-- On RPAREN shift to state 45
## Reductions:

State 45:
## Known stack suffix:
## LPAREN ID COMMA list(ID) COMMA ID COMMA ID COMMA loption(separated_nonempty_list(SEMICOLON,ID)) RPAREN
## LR(1) items:
transition -> LPAREN ID COMMA list(ID) COMMA ID COMMA ID COMMA loption(separated_nonempty_list(SEMICOLON,ID)) RPAREN . [ LPAREN EOF ]
## Transitions:
## Reductions:
-- On LPAREN EOF
--   reduce production transition -> LPAREN ID COMMA list(ID) COMMA ID COMMA ID COMMA loption(separated_nonempty_list(SEMICOLON,ID)) RPAREN

State 46:
## Known stack suffix:
## transition
## LR(1) items:
list(transition) -> transition . list(transition) [ EOF ]
## Transitions:
-- On LPAREN shift to state 29
-- On transition shift to state 46
-- On list(transition) shift to state 47
## Reductions:
-- On EOF
--   reduce production list(transition) ->

State 47:
## Known stack suffix:
## transition list(transition)
## LR(1) items:
list(transition) -> transition list(transition) . [ EOF ]
## Transitions:
## Reductions:
-- On EOF
--   reduce production list(transition) -> transition list(transition)

State 48:
## Known stack suffix:
## ID COLON list(transition)
## LR(1) items:
transitions -> ID COLON list(transition) . [ EOF ]
## Transitions:
## Reductions:
-- On EOF
--   reduce production transitions -> ID COLON list(transition)

State 49:
## Known stack suffix:
## declarations transitions
## LR(1) items:
automate -> declarations transitions . [ EOF ]
## Transitions:
## Reductions:
-- On EOF
--   reduce production automate -> declarations transitions

State 50:
## Known stack suffix:
## automate
## LR(1) items:
input -> automate . EOF [ # ]
## Transitions:
-- On EOF shift to state 51
## Reductions:

State 51:
## Known stack suffix:
## automate EOF
## LR(1) items:
input -> automate EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production input -> automate EOF

